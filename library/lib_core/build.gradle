apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    rootProject.ext.setAndroidConfig android
    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }
    buildTypes {
        release {
            println "配置buildConfigField--release"
//            buildConfigField "String", "appId", rootProject.ext.appId
        }
        debug {
            println "配置buildConfigField--debug"
//            println(rootProject.ext.applicationId)
        }
    }

}



dependencies {

    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //协程 https://github.com/hltj/kotlinx.coroutines-cn/blob/master/README.md#using-in-your-projects
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'
    def kotlin_coroutines = '1.4.2'
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlin_coroutines}"
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlin_coroutines}'

    api "androidx.core:core-ktx:1.2.0"
    //appcompat依赖了androidx.fragment，而androidx.fragment下依赖了ViewModel和 LiveData，LiveData内部又依赖了Lifecycle。
    api "androidx.appcompat:appcompat:1.2.0"
    api "androidx.activity:activity-ktx:1.2.0"
    api "androidx.fragment:fragment-ktx:1.3.0"
    //Google AAC(Android Architecture Components)android架构组件
//    api "androidx.lifecycle:lifecycle-extensions:2.2.0"
    def lifecycle_version = "2.2.0"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // 可选 - ProcessLifecycleOwner给整个 app进程 提供一个lifecycle
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    api "com.google.android.material:material:1.2.1"
    api "androidx.constraintlayout:constraintlayout:2.0.4"
    api "androidx.coordinatorlayout:coordinatorlayout:1.1.0"
    api "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    api "androidx.recyclerview:recyclerview:1.1.0"

//    api rootProject.ext.dependencies["appcompat"]
//    api rootProject.ext.dependencies["constraintlayout"]
//    api rootProject.ext.dependencies["material"]

//    annotationProcessor rootProject.ext.dependencies["lifecycle-compiler"]
    //================开源库============
    def retrofitVersion = "2.9.0"
    api "com.squareup.okhttp3:logging-interceptor:3.4.1"
    api "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    api "com.squareup.retrofit2:converter-moshi:${retrofitVersion}"
    api "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    api "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    api "com.squareup.retrofit2:adapter-rxjava3:${retrofitVersion}"
//    api "io.reactivex.rxjava3:rxjava:3.0.0"
    api "io.reactivex.rxjava3:rxandroid:3.0.0"
    //    https://github.com/square/moshi/   kotlin的json解析
    api "com.squareup.moshi:moshi:1.11.0"
//    api "com.squareup.moshi:moshi-kotlin:1.11.0"

    //ARouter路由
    api "com.alibaba:arouter-api:1.4.1"
    api "com.alibaba:arouter-compiler:1.2.2"

    //Rx
//    api rootProject.ext.dependencies["rxjava"]
//    api rootProject.ext.dependencies["rxandroid"]
//    api rootProject.ext.dependencies["AutoDispose"]
    //权限 AndPermission对国内厂商适配比较好
//    api rootProject.ext.dependencies["AndPermission"]
    //阿里路由框架
//    api(rootProject.ext.dependencies["arouter-api"]) {
//        exclude group: 'com.android.support'
//    }

//    kapt rootProject.ext.dependencies["arouter-compiler"] //每个组件中依赖阿里路由编译框架

    //okhttp+retrofit
//    api rootProject.ext.dependencies["logging-interceptor"]
//    api rootProject.ext.dependencies["retrofit"]
//    api rootProject.ext.dependencies["adapter-rxjava"]
//    api rootProject.ext.dependencies["converter"]
//
//    api rootProject.ext.dependencies["rxbus"]
//    api rootProject.ext.dependencies["livedatabus"]
//    api rootProject.ext.dependencies["multidex"]
//    api rootProject.ext.dependencies["kotlin"]

}
